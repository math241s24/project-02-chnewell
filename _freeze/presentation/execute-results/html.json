{
  "hash": "4a71f9628f99641d7a77fb2952245587",
  "result": {
    "markdown": "---\ntitle: \"An Analysis of MTG's Comprehensive Rulebook\"\nsubtitle: \"Project 2\"\nauthor: \"Christopher\"\ntitle-slide-attributes:\n  data-slide-number: none\nformat: revealjs\neditor: visual\nexecute:\n  echo: false\n---\n\n\n\n\n\n\n\n\n## What is MTG?\n\nMagic the Gathering is a children's card game. You play cards according to costs in order to win.\n\n::: {.absolute top=\"220\" left=\"0\" width=\"300\" height=\"250\"}\n![MTG Card](img/mtg_card_back)\n:::\n\n## What is MTG?\n\nMagic the Gathering is a children's card game. You play cards according to costs in order to win.\n\n::: {.absolute top=\"220\" left=\"0\" width=\"300\" height=\"250\"}\n![Storm Crow](img/mtg_card_examle)\n:::\n\n## Keywords\n\nIn order to conserve text space, rules in the game have keywords. All of these keywords are defined in the official rules book.\n\n::: {.absolute top=\"220\" left=\"0\" width=\"300\" height=\"250\"}\n![Storm Crow](img/mtg_example_highlight)\n:::\n\n## Problem\n\nThe MTG rulebook is about 250 pages.\n\n![MTG Rulebook](img/mtg_rulebook)\n\nSo, what can be done?\n\n## Topic of Research\n\nThe goal of my project is to make an application visualizing quantity and correlation through an interactive search method for the MTG rulings. Once a keyword is chosen, the app will give:\n\n::: incremental\n1.  A list of sections in the rules that the keyword resides.\n\n2.  A graph of the top 50 keywords close in proximity to the searched keyword.\n:::\n\n## The Data\n\nThe data consists of the scraped text from the official online rules.\n\n![MTG Rules PDF](img/mtg_rules)\n\n## The Data\n\nThe data consists of the scraped text from the official online rules.\n\n![MTG Rules PDF](img/mtg_rules)\n\nData wrangling has included removing all the conjunctions (and similar sorts of words).\n\n## Variables\n\nAn observation in the dataset consists of a word, and its placement in the document.\n\n\n::: {.cell}\n\n:::\n\n\n## Final Product\n\n![App Example](img/app_example)\n\n## Future Research\n\n::: incremental\n1. Data on the cards themselves.\n\n2. Frequency with respect to Rules Change.\n:::\n\n\n## Questions?\n\n\n## Testing Data Scraping {.smaller}\n\n\n![Corder Bollie Corder Bollie](img/download_1)\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}